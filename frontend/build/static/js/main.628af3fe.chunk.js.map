{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","components/Meta.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","placeholder","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","Pagination","Array","keys","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","res","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","OrderListScreen","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.628af3fe.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n// Product detail constants\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","// Redux store file\r\n// to store all reducers and middleware\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer,\r\n    productUpdateReducer, productReviewCreateReducer, productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer,\r\n    userListReducer, userDeleteReducer, userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer,\r\n    orderListReducer\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    // use reducer\r\n    productList: productListReducer, // productList is part of state\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL\r\n} from \"../constants/productConstants\"\r\n\r\n// State for product list\r\n// Reducer takes initialState and action dispatched to reducer\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    // evaluate object action type\r\n    switch (action.type) {\r\n        // product list request\r\n        case PRODUCT_LIST_REQUEST:  // action\r\n            return { loading: true, products: [] }    // currently fetching - making request\r\n\r\n        // product list success - get the data, success res\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false, products: action.payload.products,\r\n                pages: action.payload.pages, page: action.payload.page\r\n            } // data in payload - v backend vraciame viac objektov\r\n\r\n        // product list fail - error\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }    // error in payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Product Detail\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","// only one reducer...\r\n\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    // cartItems - mozme mat viac poloziek v kosiku\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product\r\n                        ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_RESET,\r\n    USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_RESET,\r\n    USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET\r\n} from \"../constants/userConstants\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_RESET, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET, \r\n    ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET\r\n} from '../constants/orderConstants'\r\n\r\n// order create reducer\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({history}) => {\r\n    // component state keyword\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`)\r\n        }else{\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q' placeholder='Search Products...'\r\n                onChange={(e) => setKeyword(e.target.value)} className='mr-sm-2 ml-sm-5'></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import {\r\n    USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET,\r\n    USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login',\r\n            { email, password },\r\n            config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // set user to local storage\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// Logout action\r\nexport const logout = () => (dispatch) => {\r\n    // remove from local storage\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    // clear states \r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users',\r\n            { name, email, password },\r\n            config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // rovno aj prihlasit uzivatela\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // set user to local storage\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// get current user details\r\n// send a token, preto getState\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`,\r\n            config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        // Fix navbar - nemenilo sa meno profilu v hlavicke\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        // token\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        // pass token\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        // pass token\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data   // updated user\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux' // for redux state\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin) // z hl. store.js\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        // zavolaj akciu logout z userAction.js\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>MyEshop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({history}) => <SearchBox history={history}/>} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link><i className='fas fa-shopping-cart' /> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ?\r\n                                (<NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>)\r\n                                :\r\n                                (<LinkContainer to='/login'>\r\n                                    <Nav.Link><i className='fas fa-user' /> Sign in</Nav.Link>\r\n                                </LinkContainer>)\r\n                            }\r\n\r\n                            {userInfo && userInfo.isAdmin &&\r\n                                (<NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>)}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; Anna, 2021\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color: color}}\r\n                    className={value >= 1\r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}}\r\n                    className={value >= 2\r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}}\r\n                    className={value >= 3\r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}}\r\n                    className={value >= 4\r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'} />\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}}\r\n                    className={value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'} />\r\n            </span>\r\n            <span> { text && text }</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number,//.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'><strong>{product.name}</strong></Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating}\r\n                        text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border'\r\n            role='status'\r\n            style={{ width: '100px', height:'100px', margin:'auto', display:'block' }}>\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x + 1}\r\n                    to={!isAdmin\r\n                        ? keyword\r\n                            ? `/search/${keyword}/page/${x + 1}`\r\n                            : `/page/${x + 1}`\r\n                        : `/admin/productlist/${x + 1}`}>\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport {Helmet} from 'react-helmet'\r\n\r\nconst Meta = ({title, description, keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description}/>\r\n            <meta name='keywords' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'My Eshop',\r\n    description: 'We sell the best products',\r\n    keywords: 'eshop, electronics'\r\n}\r\n\r\nexport default Meta\r\n","import {\r\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, \r\n    PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, \r\n    PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL\r\n} from \"../constants/productConstants\"\r\nimport axios from 'axios'\r\n\r\n// robi to co useEffect\r\n// action creator\r\n// redux thunk - add function to a function\r\nexport const listProducts = (keyword='', pageNumber='') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const res = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: res.data, })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n// List Product details\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const res = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: res.data, })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data}  = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data}  = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const res = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: res.data, })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect( () => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> \r\n    : error ? <Message variant='danger'>{error}</Message>\r\n    : (<Carousel pause='hover' className='bg-dark'>\r\n        {products.map(product => (\r\n            <Carousel.Item key={product._id}>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Image src={product.image} alt={product.name} fluid></Image>\r\n                    <Carousel.Caption className='carousel-caption'>\r\n                        <h2>{product.name} (${product.price})</h2>\r\n                    </Carousel.Caption>\r\n                </Link> \r\n            </Carousel.Item>\r\n        ))}\r\n    </Carousel>)\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\n// useDispatch - to call an action, useSelector - select part of state\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Pagination, Row } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    // dispatch\r\n    const dispatch = useDispatch()\r\n\r\n    // get piece of state - productList\r\n    const productList = useSelector(state => state.productList)\r\n    // parts of reducer\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    // call listProducts action\r\n    useEffect(() => {\r\n        // FIRE OFF the action\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductCarousel/> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1> Latest Products </h1>\r\n            {/* loading spinner */}\r\n            {loading\r\n                ? (<Loader />)\r\n                : error ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <>\r\n                            <Row>\r\n                                {products.map((product) => (\r\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                        <Product product={product} />\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n                        </>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    // Quantity part of component level state\r\n    const [qty, setQty] = useState(1)\r\n    // add a new review\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if(successProductReview){\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview]) // zavola useEffect ked sa zmenia tieto hodnoty\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()  // kvoli potvrdzovaniu formularu\r\n        dispatch(createProductReview(match.params.id, { rating, comment }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/' > Go Back </Link>\r\n\r\n            { loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <>\r\n                            <Meta title={product.name} />\r\n                             <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item><h3>{product.name}</h3></ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price: </Col>\r\n                                                    <Col><strong>${product.price}</strong></Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status: </Col>\r\n                                                    <Col>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col> Qty </Col>\r\n                                                        <Col>\r\n                                                            <Form.Control as='select' value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}>\r\n                                                                {[...Array(product.countInStock).keys()].map(x => (\r\n                                                                    <option key={x + 1} value={x + 1}> {x + 1} </option>\r\n                                                                ))}\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block' type='button'\r\n                                                    disabled={product.countInStock === 0}>Add To Cart</Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h2>Reviews</h2>\r\n                                    {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Write a Customer Review</h2>\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                            {userInfo ?\r\n                                                (<Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control as='textarea' row='3' value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button type='submit' variant='primary'>Submit</Button>\r\n                                                </Form>)\r\n                                                : <Message>Please <Link to='/login'>sign in</Link> to write a review</Message>}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\n// getState - get entire state tree\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        // veci ktore chceme vytiahnut z db?\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    // save in local storage - local storage api\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n} \r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {  // data=paymentMethod\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux' // for Redux state\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nconst CartScreen = ({ match, location, history }) => { // match su parametre z url\r\n    const productId = match.params.id\r\n\r\n    // what is after questionmark\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        // only if it has id\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => { \r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => { \r\n       history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ?\r\n                    (<Message>Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>)\r\n                    : (\r\n                        <ListGroup variant='flush'>\r\n                            { cartItems.map(item => (   // POZOR TYP ZATVORKY!!!\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name} </Link>\r\n                                        </Col>\r\n                                        <Col md={2}> ${item.price} </Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control as='select' value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))} >\r\n                                                {[...Array(item.countInStock).keys()].map(x => (\r\n                                                    <option key={x + 1} value={x + 1}> {x + 1} </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}> <Button type='button' variant='light'\r\n                                            onClick={() => removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash' />\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                            }\r\n                        </ListGroup>)\r\n\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            {/* starting for accumulator is 0 */}\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed to checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'    // login action\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    // Component level state\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin  // takto sa vola v store.js\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'   // URL query string\r\n\r\n    // redirect when we are sign in\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault() // page dont refresh\r\n        // DISPATCH LOGIN ACTION\r\n        // zavolanie akcie\r\n        dispatch(login(email, password))   // tak sa vola v userActions.js\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            { error && <Message variant='danger'>{error}</Message>}\r\n            { loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email}\r\n                        onChange={(e) => setEmail(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password}\r\n                        onChange={(e) => setPassword(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n                <Row className='py-3'>\r\n                    <Col> New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link></Col>\r\n                </Row>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'    // login action\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    // Component level state\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'   // URL query string\r\n\r\n    // redirect when we are sign in\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault() // page dont refresh\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            // DISPATCH REGISTER ACTION\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            { message && <Message variant='danger'>{message}</Message>}\r\n            { error && <Message variant='danger'>{error}</Message>}\r\n            { loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter name' value={name}\r\n                        onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email}\r\n                        onChange={(e) => setEmail(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password}\r\n                        onChange={(e) => setPassword(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirn password' value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)} ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n                <Row className='py-3'>\r\n                    <Col> Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link></Col>\r\n                </Row>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    // Component level state\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    // orderListMy state frome store.js\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    // redirect when we are sign in\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile')) // redirect to /profile\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            // DISPATCH UPDATE PROFILE\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name}\r\n                            onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email}\r\n                            onChange={(e) => setEmail(e.target.value)} ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Enter password' value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Confirn password' value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)} ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> :\r\n                    errorOrders ? <Message variant='danger'>{errorOrders}</Message>\r\n                        : (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>DATE</th>\r\n                                        <th>TOTAL</th>\r\n                                        <th>PAID</th>\r\n                                        <th>DELIVERED</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>{order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10)\r\n                                                : (<i className='fas fa-times' style={{ color: 'red' }} />)}</td>\r\n                                            <td>{order.isDelivered ? order.deliveredAt.substring(0, 10)\r\n                                                : (<i className='fas fa-times' style={{ color: 'red' }} />)}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm' variant='light'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import {\r\n    ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, \r\n    ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, \r\n    ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL\r\n} from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n\r\n        // destructing, miesto bodkovej notacie\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sing In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : \r\n                    <Nav.Link disabled>Sing In</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : \r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : \r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : \r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                }\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    \r\n    // ak je adresa ulozena v local storage tak sa predvyplni\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // DISPATCH SAVE SHIPPING ADDRESS\r\n        // send all form data\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')    // go to next page\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter address' value={address}\r\n                        onChange={(e) => setAddress(e.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter city' value={city}\r\n                        onChange={(e) => setCity(e.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter postal code' value={postalCode}\r\n                        onChange={(e) => setPostalCode(e.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='text' placeholder='Enter country' value={country}\r\n                        onChange={(e) => setCountry(e.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","// Payment method screen\r\nimport React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    // ak nie je zadana adresa treba ju zadat\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // DISPATCH SAVE PAYMENT METHOD\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')    // go to next page\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='Paypal or Credit Card'\r\n                            id='PayPal' name='paymentMethod' value='PayPal' checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n\r\n                        {/* <Form.Check type='radio' label='Stripe'\r\n                            id='Stripe' name='paymentMethod' value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","// Summary of ordered stuff\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card, ListGroupItem } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    // Funkcia na zarovnanie na 2 desatinne miesta\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    // Calculate prices\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                            {' '}{cart.shippingAddress.postalCode}, {cart.shippingAddress.country}</p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0\r\n                                ? <Message>Your cart is empty</Message>\r\n                                : (<ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button type='button' className='btn-block'\r\n                                    disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\r\n                                    Place order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","// Summary of ordered stuff\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id     // id z URL\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay // premenovanie navratovych premennych z reducer\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        // Funkcia na zarovnanie na 2 desatinne miesta\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        // Calculate prices\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce(\r\n            (acc, item) => acc + item.price * item.qty, 0))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){  // ci sme prihlaseny\r\n            history.push('/login')\r\n        }\r\n\r\n        // Dynamically adding paypal script\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => { setSdkReady(true) }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || order._id !== orderId || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        // CALL PAY ORDER ACTION\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? <Loader />\r\n        : error ? <Message variant='danger'>{error}</Message>\r\n            : <>\r\n                <h1>Order {order._id}</h1>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p><strong>Name: </strong>{order.user.name} </p>\r\n                                <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}> {order.user.email} </a></p>\r\n                                <p><strong>Address: </strong>\r\n                                    {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                            {' '}{order.shippingAddress.postalCode}, {order.shippingAddress.country}</p>\r\n                                {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    : <Message variant='danger'>Not Delivered</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <p><strong>Method: </strong>\r\n                                    {order.paymentMethod}</p>\r\n                                {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    : <Message variant='danger'>Not Paid</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0\r\n                                    ? <Message>Order is empty</Message>\r\n                                    : (<ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                    )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {!order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                        {loadingPay && <Loader />}\r\n                                        {!sdkReady ? <Loader /> : (\r\n                                            <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {  // not admin or not logged in\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])  // dependency preto aby sa to spustilo este raz po successDelete\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (<Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ?\r\n                                        (order.paidAt.substring(0, 10))\r\n                                        : (<i className='fas fa-times' style={{ color: 'red' }} />)}</td>\r\n\r\n                                    <td>{order.isDelivered ?\r\n                                        (order.deliveredAt.substring(0, 10))\r\n                                        : (<i className='fas fa-times' style={{ color: 'red' }} />)}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {  // not admin or not logged in\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])  // dependency preto aby sa to spustilo este raz po successDelete\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure')){\r\n        dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (<Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                    <td>{user.isAdmin ?\r\n                                        (<i className='fas fa-check' style={{ color: 'green' }} />)\r\n                                        : (<i className='fas fa-times' style={{ color: 'red' }} />)}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'    // login action\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    // Component level state\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Global states\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    // userUpdate state\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                // predvyplnit formular aktualnymi udajmi zo state\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>Go Back</Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit user</h1>\r\n                {loadingUpdate && <Loader /> }\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\r\n                {loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='name' placeholder='Enter name' value={name}\r\n                                        onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control type='email' placeholder='Enter email' value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)} ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='isadmin'>\r\n                                    <Form.Check type='checkbox' label='Is Admin' checked={isAdmin}\r\n                                        onChange={(e) => setIsAdmin(e.target.checked)} ></Form.Check>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Button type='submit' variant='primary'>Update</Button>\r\n\r\n                            </Form>)}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Pagination } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate,\r\n        success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])  // dependency preto aby sa to spustilo este raz po successDelete\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure')) {\r\n            // DELETE PRODUCTS\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        // CREATE PRODUCT\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus' /> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                    <>\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table> \r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                    </>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    // Component level state\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Global states\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                // predvyplnit formular aktualnymi udajmi zo state\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]  // can upload multiple files\r\n        const formData = new FormData()\r\n        formData.append('image', file)    // image sa vola i v backend\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // UPDATE PRODUCT\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter name' value={name}\r\n                                        onChange={(e) => setName(e.target.value)} ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Enter price' value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)} ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='image'>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter image url' value={image}\r\n                                        onChange={(e) => setImage(e.target.value)} ></Form.Control>\r\n                                    <Form.File id='image-file' label='Choose File' custom\r\n                                        onChange={uploadFileHandler}></Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='brand'>\r\n                                    <Form.Label>Brand</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter brand' value={brand}\r\n                                        onChange={(e) => setBrand(e.target.value)} ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='countInStock'>\r\n                                    <Form.Label>Count in Stock</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Enter count in stock' value={countInStock}\r\n                                        onChange={(e) => setCountInStock(e.target.value)} ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter category' value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)} ></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='description'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter description' value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)} ></Form.Control>\r\n                                </Form.Group>\r\n\r\n\r\n                                <Button type='submit' variant='primary'>Update</Button>\r\n\r\n                            </Form>)}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact/>\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact/>\n          <Route path='/page/:pageNumber' component={HomeScreen} exact/>\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}> \n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}